<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Living life and make it better]]></title>
  <link href="http://endy.artivisi.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://endy.artivisi.com/blog/"/>
  <updated>2012-08-15T00:03:16+07:00</updated>
  <id>http://endy.artivisi.com/blog/</id>
  <author>
    <name><![CDATA[Endy Muhardin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Backup Home Folder]]></title>
    <link href="http://endy.artivisi.com/blog/linux/backup-home-folder/"/>
    <updated>2011-08-26T23:00:29+07:00</updated>
    <id>http://endy.artivisi.com/blog/linux/backup-home-folder</id>
    <content type="html"><![CDATA[<p>Seberapa penting file di komputer kita? Tentu tidak ternilai harganya. Tapi apakah kita melakukan backup secara terhadap file-file di komputer kita? Beberapa menit yang lalu, saya menjawab tidak untuk pertanyaan tersebut.</p>

<p>Kenapa backup tidak dilakukan? Penyebab utamanya biasanya adalah karena merepotkan. Kita harus pilih file yang mau dibackup, membuka aplikasi backup, lalu menjalankannya. Walaupun cuma butuh waktu beberapa menit, tapi biasanya kita sering menunda dan akhirnya lupa.</p>

<p>Cara paling efektif untuk melakukan backup rutin adalah dengan mengotomasinya. Effort untuk melakukan setup cukup sekali saja, selanjutnya backup akan berjalan otomatis tanpa kita sadari. Pada artikel ini, saya akan posting teknik backup yang saya gunakan.</p>

<p>Sebelum kita mulai, terlebih dulu kita tentukan requirementnya, supaya jelas apa yang kita ingin capai. Saya ingin membackup folder tertentu di komputer saya (misalnya <em>/home/endy</em> dan <em>/opt/multimedia/Photos</em>). Backup ini dilakukan secara rutin (misalnya satu jam sekali, satu hari sekali, atau satu minggu sekali). Selain rutin, juga harus incremental. Artinya kalau saya punya backup hari ini jam 11, maka backup selanjutnya di jam 12 hanya menyimpan file yang berubah saja. Dengan demikian, saya bisa jalankan backupnya satu jam sekali dan tidak akan menyebabkan harddisk menjadi penuh dalam beberapa jam saja.</p>

<!--more-->


<p>Kalau kita cari di Google dengan keyword <em>ubuntu backup application</em>, ada banyak sekali aplikasi backup yang tersedia.
Ada Unison, Bacula, SBackup, rdiff-backup, Deja Dup, dan <a href="http://davestechshop.net/ListOfFreeOpenSourceLinuxUbuntuBackupSoftware">entah apa lagi</a>. Walaupun demikian, seperti biasanya, saya akan gunakan aplikasi yang paling populer, universal (ada di mana-mana), dan bisa dijalankan dari command line (supaya bisa diotomasi dengan cron). Pilihannya tentu adalah <em>rsync</em>.</p>

<p><em>rsync</em> adalah aplikasi untuk melakukan file transfer. Dia memiliki beberapa kelebihan, diantaranya :</p>

<ul>
<li><p>tersedia di semua *nix (misalnya Linux dan Mac)</p></li>
<li><p>berbasis command line, sehingga bisa saya aplikasikan juga di server</p></li>
<li><p>sudah teruji kehandalannya</p></li>
<li><p>bisa resume (bila transfer putus di tengah jalan, tidak perlu ulang dari awal)</p></li>
<li><p>data yang ditransfer bisa dikompres, supaya lebih cepat</p></li>
<li><p>bisa mengirim data melalui ssh, sehingga keamanan data terjamin</p></li>
<li><p>memiliki kemampuan hard linking sehingga bisa menghemat space (akan dijelaskan lebih lanjut)</p></li>
</ul>


<p>With great power, comes great complexity. Demikian kata pamannya Spiderman seandainya dia harus menggunakan <em>rsync</em>. Saking banyaknya opsi, sehingga kita bingung apa yang harus dipakai. Berikut adalah opsi rsync yang saya gunakan :</p>

<ul>
<li><p>a : archive. Opsi ini sama dengan kalau kita mengaktifkan opsi rlptgoD</p></li>
<li><p>r : rekursif sampai ke subfolder terdalam</p></li>
<li><p>l : symlink tetap dicopy sebagai symlink</p></li>
<li><p>p : file permission disamakan dengan aslinya</p></li>
<li><p>t : modification time (waktu terakhir update) disamakan dengan aslinya</p></li>
<li><p>g : kepemilikan group disamakan dengan aslinya</p></li>
<li><p>o : kepemilikan owner disamakan dengan aslinya</p></li>
<li><p>D : file device dan special disamakan dengan aslinya</p></li>
<li><p>force : folder kosong di tujuan dihapus walaupun ada isinya</p></li>
<li><p>ignore-errors : lanjut terus walaupun ada error</p></li>
<li><p>exclude-from : file text berisi daftar file/folder yang tidak perlu ditransfer</p></li>
<li><p>link-dest : lihat ke folder yang disebutkan, kalau ada file yang sama, buat hard link</p></li>
</ul>


<p>Pada penjelasan di atas, beberapa kali disebutkan istilah hard-link. Di Linux, suatu file terdiri dari dua bagian : isi (content), dan nama. Satu content yang sama bisa saja memiliki dua nama yang berbeda di folder berbeda sehingga terlihat seolah-olah ada dua file.
Misalnya, kita memiliki file bernama <em>coba.txt</em>. Ini artinya, ada satu content dan satu nama file coba.txt. Kita bisa membuat nama file baru yang isinya sama dengan perintah sebagai berikut</p>

<p><em>__ln coba.txt halo.txt</em></p>

<p>Perintah di atas akan membentuk file <em>halo.txt</em> yang isinya sama dengan <em>coba.txt</em>. Kalau kita edit <em>coba.txt</em>, maka isi file <em>halo.txt</em> juga akan berubah, karena mereka sebetulnya menunjuk ke benda yang sama.</p>

<p>Dengan menggunakan hard-link ini, kita bisa menduplikasi file tanpa menduplikasi space di harddisk. Ini akan sangat berguna untuk membuat incremental backup, karena kita bisa membuat backup sesering mungkin tanpa memenuhi isi harddisk.</p>

<p>Fitur ini kita gunakan pada <em>rsync</em> dengan opsi <em>link-dest</em>. Sebagai contoh, kita jalankan backup pertama kali dan menghasilkan folder <em>20110826-1100</em>. Pada waktu kita jalankan backup kedua, kita berikan opsi <em>link-dest=20110826-1100</em>. Saat akan mengisi folder yang baru (misalnya <em>20110826-1200</em>), <em>rsync</em> akan melihat ke folder <em>20110826-1100</em> dan memeriksa apakah file yang sama sudah ada. Bila sudah ada, maka <em>rsync</em> tidak akan menulis file baru, melainkan hanya akan membuat hard-link saja. Jadi, bila backup pertama berisi 100 file dengan total 10 GB, dan backup kedua berisi 99 file yang sama, dan 1 file saja yang berubah dengan ukuran 1 GB, maka total space yang terpakai adalah 10 GB (backup pertama) dan 1 GB (backup kedua), bukannya 20 GB.</p>

<p>Setelah kita memahami opsi <em>rsync</em>, berikut adalah perintah yang kita gunakan</p>

<p><div><script src='https://gist.github.com/1172978.js?file=rsync-cmd.txt'></script>
<noscript><pre><code>rsync -a --force --ignore-errors --exclude-from=rsync-exclude.txt --link-dest=folder-backup-sebelumnya SRC DEST</code></pre></noscript></div>
</p>

<p>File <em>rsync-exclude.txt</em> berisi folder yang tidak dibackup, punya saya isinya seperti ini :</p>

<p><div><script src='https://gist.github.com/1172978.js?file=rsync-exclude.txt'></script>
<noscript><pre><code>#rsync script exclude file
**/.thumbnails/
**/Desktop/Trash/
**/.cache/
**/.m2/
**/.metadata/
**/.netbeans/
**/.shotwell/
**/.config/
**/.gconf/
**/virtual-machines/</code></pre></noscript></div>
</p>

<p><em>folder-backup-sebelumnya</em> perlu dihitung dulu. Caranya menggunakan perintah <em>ls -tr</em> yang akan menampilkan isi folder yang diurutkan berdasarkan modification time secara descending. Berikut contoh outputnya.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=ls-ltr-output'></script>
<noscript><pre><code>ls -ltr /opt/downloads/backups/
total 12
drwxr-xr-x 3 endy endy 4096 2011-08-26 13:21 20110826-1321
drwxr-xr-x 3 endy endy 4096 2011-08-26 14:07 20110826-1407
drwxr-xr-x 3 endy endy 4096 2011-08-26 14:27 20110826-1427</code></pre></noscript></div>
</p>

<p>Dari sini, kita cukup ambil yang paling atas menggunakan perintah <em>tail -1</em></p>

<p><div><script src='https://gist.github.com/1172978.js?file=ls-ltr-tail'></script>
<noscript><pre><code>ls -tr /opt/downloads/backups/ | tail -1
20110826-1427</code></pre></noscript></div>
</p>

<p>Dengan bermodalkan pengetahuan tersebut, kita bisa membuat script seperti ini.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=rsync-backup.sh'></script>
<noscript><pre><code>#!/usr/bin/env bash

# run hourly with cron
# 0 * * * * /path/ke/rsync-backup.sh /home/endy /opt/downloads/backups /path/ke/rsync-exclude.txt

SRC=$1
DEST=$2
EXCLUDES=$3
args=(&quot;$@&quot;);
MORE_OPTS=${args[@]:3}

if [ &quot;$#&quot; -lt 3 ]; then
    echo &quot;Usage : $0 &lt;src&gt; &lt;dest&gt; &lt;exclude list&gt; [rsync options]&quot;
    return 1
fi


LAST=$(ls -tr $DEST | tail -1)
if [ &quot;$LAST&quot; != &quot;&quot; ]; then
        LINK=&quot;--link-dest=$DEST/$LAST&quot;
fi

OPTS=&quot; -a --force --ignore-errors --exclude-from=$EXCLUDES $LINK&quot;

# echo OPTS $OPTS MORE_OPTS $MORE_OPTS

rsync $OPTS $MORE_OPTS $SRC $DEST/$(date +%Y%m%d-%H%M)</code></pre></noscript></div>
</p>

<p>Untuk membackup folder <em>/home/endy</em> ke folder <em>/opt/downloads/backups</em>, kita jalankan seperti ini :</p>

<p><div><script src='https://gist.github.com/1172978.js?file=exec-backup.sh'></script>
<noscript><pre><code>./rsync-backup-home.sh /home/endy /opt/downloads/backups rsync-exclude.txt</code></pre></noscript></div>
</p>

<p>Selanjutnya, kita bisa pasang di crontab dengan setting seperti ini, supaya dijalankan tiap tiga jam.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=crontab.txt'></script>
<noscript><pre><code>0 */3 * * * /path/ke/rsync-backup-home.sh /home/endy /opt/downloads/backups /path/ke/rsync-exclude.txt</code></pre></noscript></div>
</p>

<p>Voila ... folder home kita sudah terbackup secara otomatis tanpa kita sadari. Sepanjang menulis artikel ini, laptop saya sudah membackup dirinya sendiri sebanyak 3 kali :D</p>

<p>Setelah membuat backup di harddisk laptop, tentunya kita ingin memindahkannya ke external harddisk supaya kita bisa mengosongkan lokasi backup di laptop.</p>

<p>Berikut adalah perintah rsync yang digunakan.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=copy-backup-to-external.sh'></script>
<noscript><pre><code>rsync -avzPH /opt/downloads/backups /media/DATA2/</code></pre></noscript></div>
</p>

<p>Dan ini adalah penjelasan terhadap opsi yang digunakan:</p>

<ul>
<li><p>P : sama dengan partial dan progress</p></li>
<li><p>partial : file yang baru dicopy sebagian tetap disimpan agar bisa diresume</p></li>
<li><p>progress : menampilkan progress report</p></li>
<li><p>H : hard link dicopy sebagai hard link juga. Tanpa opsi ini, tiap hard link akan dibuatkan file baru sehingga boros space harddisk</p></li>
</ul>


<p>Perintah untuk transfer ke external harddisk ini tidak saya jalankan secara otomatis via cron, karena harddisknya belum tentu terpasang.</p>

<p>Demikianlah artikel tentang backup rutin. Mudah-mudahan kita semua bisa terhindar dari musibah harddisk.</p>

<h3>Referensi</h3>

<ul>
<li><p><a href="http://www.mikerubel.org/computers/rsync_snapshots">Easy Automated Snapshot-Style Backups with Linux and Rsync</a></p></li>
<li><p><a href="http://www.hermann-uwe.de/blog/simple-backups-using-rsync">Simple backup using rsync</a></p></li>
<li><p><a href="http://rsync.samba.org/examples.html">rsync examples</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Screencast]]></title>
    <link href="http://endy.artivisi.com/blog/aplikasi/linux/membuat-screencast/"/>
    <updated>2011-06-28T01:03:23+07:00</updated>
    <id>http://endy.artivisi.com/blog/aplikasi/linux/membuat-screencast</id>
    <content type="html"><![CDATA[<p>Jaman sekarang sudah semakin maju. Fakir bandwidth semakin sedikit. Oleh karena itu, media komunikasi juga berubah, yang tadinya berbasis teks (hemat bandwidth) menjadi multimedia (rakus bandwidth).</p>

<p>Demi mengikuti perkembangan jaman, saya mengeksplorasi pembuatan tutorial dalam bentuk screencast. Ternyata hasilnya memuaskan. Dengan beberapa menit merekam screencast, informasi yang disampaikan sama dengan beberapa jam mengetik blog entry.</p>

<p>Artikel ini saya tulis untuk mendokumentasikan langkah-langkah membuat screencast, mulai dari merekam screencast, sampai mempublikasikannya di blog.</p>

<h2>Merekam video</h2>

<p>Di Ubuntu ada dua aplikasi yang saya coba, yaitu Xvidcap dan Record My Desktop. Dua-duanya sama fungsinya dan tidak ada perbedaan yang signifikan. Setelah mencoba keduanya, pendapat saya adalah Record My Desktop lebih mudah digunakan. Jadi, inilah aplikasi yang saya pilih.</p>

<p>Perlu diperhatikan kemampuan prosesor komputer Anda. Ini kaitannya dengan setting frame per second (fps). Bila fps melebihi kemampuan prosesor, video yang kita rekam akan terlihat lebih cepat dari sebenarnya. Di laptop saya, setting 15 fps akan menghasilkan video yang kira-kira 2x lebih cepat. Setelah trial and error, saya temukan bahwa 9 fps adalah setting yang tepat.</p>

<p>Perbedaan yang utama di antara kedua aplikasi ini adalah format outputnya. Record My Desktop mengeluarkan format ogv sedangkan Xvidcap mengeluarkan format mpeg. Perbedaan format ini nantinya akan mempengaruhi langkah pemrosesan selanjutnya.</p>

<h2>Merekam suara</h2>

<p>Biasanya, saya merekam suara dalam proses yang terpisah, supaya tidak banyak ehm dan eee. Rekaman dibuat sambil menonton screencast yang sudah kita rekam. Setelah rekaman suara dibuat, bisa diedit dengan menggunakan aplikasi Audacity untuk menghilangkan noise, memotong bagian yang tidak penting, dan sebagainya.</p>

<h2>Menggabungkan video dan audio</h2>

<p>Selanjutnya, kita menggunakan aplikasi Avidemux untuk menggabungkan file audio dan file video menjadi satu file. Dengan aplikasi ini kita juga bisa mengedit video untuk menghilangkan bagian-bagian yang tidak perlu ataupun menyambung beberapa video menjadi satu.</p>

<h2>Mempersiapkan format video untuk web</h2>

<p>Ada berbagai format video yang tersedia. Masing-masing format memiliki dukungan browser yang berbeda-beda. Daftar lengkapnya bisa dilihat <a href="http://diveintohtml5.info/video.html#what-works">di sini</a></p>

<p>Pada intinya, supaya bisa dilihat di berbagai browser, kita harus menyediakan file dengan format ogv, mp4, dan webm. Kita juga harus menyertakan poster dalam format jpg atau png supaya bisa ditampilkan dengan benar di browser.</p>

<p>Ada beberapa script yang bisa digunakan, misalnya <a href="https://github.com/kwiliarty/vfe-sh">ini</a> atau <a href="http://brettterpstra.com/automating-html5-video-encodes/">ini</a></p>

<p>Atau, kita juga bisa menjalankan commandnya satu persatu di command line. Berikut adalah command yang saya jalankan :</p>

<p>Konversi dari ogv menjadi mp4
<div><script src='https://gist.github.com/1048657.js?file=ogv-to-mp4.sh'></script>
<noscript><pre><code>ffmpeg -vcodec libx264 -vpre lossless_medium -i file-input.ogv file-output.mp4</code></pre></noscript></div>
</p>

<p>Konversi dari ogv menjadi webm
<div><script src='https://gist.github.com/1048657.js?file=ogv-to-webm.sh'></script>
<noscript><pre><code>ffmpeg -pass 1 -passlogfile file-input.ogv -threads 16  -keyint_min 0 -g 250 -skip_threshold 0 -qmin 1 -qmax 51 -i file-input.ogv -vcodec libvpx -b 614400 -s 640x480 -aspect 4:3 -an -y tmp.webm

rm tmp.webm

ffmpeg -pass 2 -passlogfile file-input.ogv -threads 16  -keyint_min 0 -g 250 -skip_threshold 0 -qmin 1 -qmax 51 -i file-input.ogv -vcodec libvpx -b 614400 -s 640x480 -aspect 4:3 -an -y file-output.webm
</code></pre></noscript></div>
</p>

<p>Command di atas mungkin berbeda bila file asli kita formatnya adalah mpeg seperti yang dihasilkan oleh XVidcap.</p>

<p>Membuat poster
<div><script src='https://gist.github.com/1048657.js?file=create-poster.sh'></script>
<noscript><pre><code>ffmpeg -r 1 -t 1 -vframes 1 -i input-file.mp4  output-file.png</code></pre></noscript></div>
</p>

<h2>Upload</h2>

<p>Setelah semua file(ogv,mp4,png) terkumpul di satu folder, kita upload menggunakan rsync
<div><script src='https://gist.github.com/1048657.js?file=upload-to-server.sh'></script>
<noscript><pre><code>rsync -avz /path/to/video/folder user@example.com:/home/user/public_html/videos</code></pre></noscript></div>
</p>

<h2>Tampilkan di blog</h2>

<p>Terakhir, kita ingin menayangkan video tersebut di blog kita. Karena saya menggunakan wordpress, saya pasang <a href="http://open.pages.kevinwiliarty.com/external-video-for-everybody/">plugin External Video for Everybody</a>. Plugin ini menampilkan video player di browser kita, supaya orang lain bisa langsung klik tombol play. Di belakang layar, plugin ini mendeteksi apakah browser kita mendukung HTML 5 atau tidak. Kalau iya, maka video akan ditampilkan dengan tag khusus &lt;video&gt;. Bila tidak, maka flash player akan digunakan. Flash player ini tidak disediakan oleh plugin ini. Kita perlu memilih dan mendownload sendiri dari sekian banyak flash player yang tersedia, contohnya <a href="http://www.longtailvideo.com/players/jw-flv-player/">JW Player</a></p>

<p>Sebagai penutup, bisa melihat <a href="http://linuxandfriends.com/2009/07/13/how-to-create-a-screencast-in-ubuntu-linux/">tutorial ini</a> yang saya gunakan sebagai titik awal eksplorasi saya.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simulasi Slow Network]]></title>
    <link href="http://endy.artivisi.com/blog/linux/simulasi-slow-network/"/>
    <updated>2009-06-15T15:21:33+07:00</updated>
    <id>http://endy.artivisi.com/blog/linux/simulasi-slow-network</id>
    <content type="html"><![CDATA[<p>Di salah satu proyek ArtiVisi, kita memiliki aplikasi client-server yang terhubung melalui koneksi internet berbandwidth kecil. Client menghubungi server melalui modem GPRS.</p>

<p>Permasalahannya adalah bagaimana cara mengetes koneksi lemot ini pada saat development? Umumnya pada saat development kita menjalankan server dan client di komputer yang sama. Atau kalaupun di komputer berbeda, dijalankan di satu LAN, sehingga kecepatan bisa mencapai 100Mbps.</p>

<p>Ada dua alternatif yang bisa kita gunakan. Yang pertama adalah aplikasi tc (traffic control) yang biasanya sudah terinstal secara default di Ubuntu. Kalau belum terinstal, kita bisa menginstal paket iproute atau iproute2, tergantung distro yang Anda gunakan.</p>

<p>Alternatif kedua, menggunakan aplikasi ip_relay. Aplikasi ini bisa diinstal dengan nama paket iprelay.</p>

<p>Berikut adalah referensi pemakaian tc :</p>

<ul>
<li><p><a href="http://www.kdedevelopers.org/node/1878">pipita's blog</a></p></li>
<li><p><a href="http://henrydu.com/blog/how-to/simulate-a-slow-link-by-linux-bridge-123.html">Henry's Point</a></p></li>
</ul>


<p>Dan ini adalah referensi pemakaian iprelay :</p>

<ul>
<li><p><a href="http://ubuntuforums.org/showthread.php?t=670628">Ubuntu Forum</a></p></li>
<li><p><a href="http://www.stewart.com.au/ip_relay/README">Readme di website ip_relay</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrade Ubuntu]]></title>
    <link href="http://endy.artivisi.com/blog/linux/upgrade-ubuntu/"/>
    <updated>2009-04-22T23:10:37+07:00</updated>
    <id>http://endy.artivisi.com/blog/linux/upgrade-ubuntu</id>
    <content type="html"><![CDATA[<p>Sebentar lagi Ubuntu terbaru akan rilis. Seperti biasanya, saya akan menjalankan ritual 6 bulanan yang terdiri dari kegiatan sbb:</p>

<ul>
<li><p>Unduh ISO Ubuntu terbaru</p></li>
<li><p>Bakar ke CD</p></li>
<li><p>Backup isi home folder</p></li>
<li><p>Backup mailbox Thunderbird</p></li>
<li><p>Remove semua hidden file di home folder</p></li>
<li><p>Reinstall Ubuntu dengan memformat partisi sistem</p></li>
</ul>


<p>Saya tidak terlalu suka upgrade, karena banyak menyisakan sampah dan jebakan. Lebih nyaman dan cepat memformat partisi sistem daripada troubleshoot hasil upgrade.</p>

<p>Karena ritual ini akan terus dilakukan di masa depan, ada baiknya kita optimasi workflownya agar lebih efisien.</p>

<p>Berikut adalah requirement saya untuk workflow upgrade ini:</p>

<ul>
<li><p>Saya memiliki beberapa aplikasi yang mandatory tapi tidak termasuk dalam paket default Ubuntu, seperti Java SDK, Thunderbird, Inkscape, dan beberapa aplikasi lain. Saya ingin menyimpan daftar aplikasi ini, dan me-reuse-nya setiap kali upgrade.</p></li>
<li><p>Saya ingin memisahkan proses download <em>.deb yang memakan waktu lama dengan proses instalasi aplikasi. Tujuannya, agar proses download </em>.deb ini bisa 'dititipkan' di komputer lain yang online 24/7. Setelah selesai, hasilnya tinggal dicopy ke komputer saya, dan langsung diinstal</p></li>
</ul>


<p>Setelah browsing <a href="">kesana</a> <a href="http://beans.seartipy.com/2006/05/06/update-or-install-applications-on-debianubuntu-without-an-internet-connection/">kemari</a>, akhirnya saya mendapatkan workflow yang sesuai, sebagai berikut.</p>

<ul>
<li><p>Buat dulu daftar paket yang ingin diinstal, dari instalasi Ubuntu yang sekarang</p></li>
<li><p>Lakukan proses instalasi</p></li>
<li><p>Buat daftar URL untuk mengunduh *.deb menggunakan Ubuntu yang baru diinstal</p></li>
<li><p>Jalankan proses unduh di komputer lain yang online 24/7</p></li>
<li><p>Setelah selesai, pindahkan hasilnya ke komputer ber-Ubuntu baru, dan instal</p></li>
</ul>


<h2>Membuat daftar aplikasi</h2>

<p>Daftar aplikasi yang terinstal di komputer yang kita pakai sekarang dapat didapatkan dengan menjalankan perintah berikut di command prompt.</p>

<pre><code>dpkg --get-selections | sed -n 's/^\(.*\)\tinstall$/\1$/p' | cut -f1 &gt; daftar_aplikasi.txt
</code></pre>

<p>Buka file daftar_aplikasi.txt dengan Text Editor dan buang aplikasi yang terinstal secara default. Setelah diedit, file saya berisi sebagai berikut.</p>

<pre><code>ttf-inconsolata
ttf-droid
nautilus-open-terminal
mc
chmsee
unrar
comix
keepassx
subversion
git-svn
gimp
network-manager-openvpn
network-manager-openvpn-gnome
network-manager-pptp
network-manager-pptp-gnome
network-manager-vpnc
network-manager-vpnc-gnome
openssh-server
gnome-alsamixer
vlc
rtorrent
hamster-applet
timer-applet
inkscape
mysql-server
mysql-query-browser
mysql-admin
sun-java6-jdk
ubuntu-restricted-extras
build-essential
ant
</code></pre>

<h2>Proses Instalasi</h2>

<p>Tidak ada yang istimewa dari proses instalasi. Berikut checklist yang saya gunakan:</p>

<ul>
<li><p>Backup isi home folder</p></li>
<li><p>Backup mailbox Thunderbird, biasanya ada di folder .mozilla-thunderbird</p></li>
<li><p>Remove semua hidden file dan folder di home. File hidden ini berisi konfigurasi aplikasi yang terinstal. Kita tidak ingin sistem baru kita menggunakan konfigurasi lama. Nanti jadi tidak terlihat barunya.</p></li>
<li><p>Reinstall Ubuntu dengan memformat partisi sistem</p></li>
<li><p>Edit /etc/apt/sources.list agar menggunakan mirror lokal. Saya biasa menggunakan kambing.ui.edu</p></li>
<li><p>Jalankan apt-get update untuk mengupdate database aplikasi</p></li>
</ul>


<p>Berikut isi file /etc/apt/sources.list saya.</p>

<pre><code>deb http://kambing.ui.edu/ubuntu/ intrepid main restricted universe multiverse
deb http://kambing.ui.edu/ubuntu/ intrepid-updates main restricted universe multiverse
deb http://kambing.ui.edu/ubuntu/ intrepid-security main restricted universe multiverse
</code></pre>

<p>Setelah install ulang, file ini akan menjadi seperti ini</p>

<pre><code>deb http://kambing.ui.edu/ubuntu/ jaunty main restricted universe multiverse
deb http://kambing.ui.edu/ubuntu/ jaunty-updates main restricted universe multiverse
deb http://kambing.ui.edu/ubuntu/ jaunty-security main restricted universe multiverse
</code></pre>

<p>Segera setelah database aplikasi kita up-to-date, kita bisa lanjut ke langkah berikutnya.</p>

<h2>Membuat daftar URL untuk download</h2>

<p>Jalankan perintah berikut di command prompt.</p>

<pre><code>cat daftar_aplikasi.txt | xargs -i apt-get install -qq --print-uris {} | cut -d\' -f2 &gt; daftar_url.txt
</code></pre>

<p>Perintah ini akan menghasilkan file daftar_url.txt, yang berisi daftar URL file *.deb yang dibutuhkan untuk instalasi.</p>

<h2>Mengunduh *.deb</h2>

<p>Berbekal daftar_url.txt, kita bisa segera menjalankan proses pengunduhan di komputer lain yang online 24/7. Komputer ini tidak perlu menjalankan Ubuntu terbaru. Bahkan tidak harus menjalankan Linux.</p>

<p>Jika komputer tersebut juga menjalankan Linux, maka kita bisa menggunakan wget dengan perintah sebagai berikut.</p>

<pre><code>wget -b -c -nc -o donlod-ubuntu.log -i daftar_url.txt
</code></pre>

<p>Proses pengunduhan dapat dipantau dengan melihat isi file donlod-ubuntu.log. Gunakan perintah tail seperti ini.</p>

<pre><code>tail -f daftar_url.txt 
</code></pre>

<p>Tekan Ctrl+C untuk keluar dari tail.</p>

<p>Proses ini akan menghasilkan banyak file *.deb di folder tempat kita menjalankan perintah wget tadi. Setelah semua file didapatkan, copy ke komputer kita yang baru diinstal tersebut.</p>

<h2>Instalasi *.deb</h2>

<p>Copy semua file *.deb ke folder /var/cache/apt/archives di komputer berUbuntu baru. Selanjutnya kita lakukan proses instalasi dengan mengetik perintah berikut di command prompt.</p>

<pre><code>cat daftar_aplikasi.txt | xargs -i apt-get install -y {}
</code></pre>

<p>Tunggu sejenak sampai selesai.</p>

<h2>Replikasi Instalasi</h2>

<p>Bagaimana jika kita disuruh melakukan instalasi identik di banyak komputer sekaligus? Gampang, berikut caranya.</p>

<p>Instal salah satu komputer sampai selesai. Lengkapi semua aplikasi yang dibutuhkan. Segera setelah selesai, extract daftar aplikasi yang terinstal menggunakan perintah berikut.</p>

<pre><code>dpkg --get-selections &gt; daftar_instalasi.txt
</code></pre>

<p>Copy file daftar_instalasi.txt ini berikut isi folder /var/cache/apt/archives/ ke komputer berikut yang akan diinstal.</p>

<p>Di komputer berikut, copy file *.deb ke folder /var/cache/apt/archives/. Lalu jalankan perintah berikut untuk mengisi daftar instalasi.</p>

<pre><code>sudo dpkg --set-selections &lt; daftar_instalasi.txt
</code></pre>

<p>Setelah itu, jalankan perintah berikut untuk memulai proses instalasi.</p>

<pre><code>sudo apt-get dselect-upgrade
</code></pre>

<p>Semoga bermanfaat.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Network Device menghilang di VMWare]]></title>
    <link href="http://endy.artivisi.com/blog/linux/vmware-eth/"/>
    <updated>2009-03-03T15:04:24+07:00</updated>
    <id>http://endy.artivisi.com/blog/linux/vmware-eth</id>
    <content type="html"><![CDATA[<p>Saya menggunakan VMWare secara intensif dalam proses development.
Salah satu penggunaannya adalah untuk menginstal aplikasi atau database milik client. Beberapa merek database seperti Oracle relatif invasif terhadap sistem, misalnya mendikte jumlah swap ataupun mengharuskan mengedit kernel parameter. Tentunya ini membuat kotor sistem operasi saya.</p>

<p>Selain itu, kadangkala client menggunakan sistem operasi yang berbeda dengan yang saya gunakan. Ini juga dapat diselesaikan dengan menggunakan VMWare.</p>

<p>Saya menyimpan file-file VM di harddisk eksternal, untuk meningkatkan performance. Menurut <a href="http://www.codinghorror.com">Jeff Atwood</a>, kinerja VM akan meningkat bila dia berada di harddisk yang berbeda dengan hostnya.</p>

<p>Penyimpanan di harddisk eksternal ini ternyata mengundang sedikit masalah. Kadangkala network interface VM saya menghilang. Masalah ini terjadi pada kombinasi host Ubuntu dan guest Ubuntu.</p>

<p>Setelah googling kesana kemari, ternyata ini disebabkan oleh beberapa hal :</p>

<ol>
<li><p>Ubuntu me-mount partisi harddisk eksternal secara acak. Kadang partisi 1 dimount ke /media/disk-1, kadang ke /media-disk-2</p></li>
<li><p>Bila posisi mount berubah, VMWare akan menggenerate UUID (ID unik untuk guest VM) baru</p></li>
<li><p>Setiap kali UUID berubah, MAC Address network interface guest VM juga berubah.</p></li>
<li><p>Ubuntu di guest VM meng-cache MAC address, sehingga kalau MAC yang dia cache tidak ada, network interface tersebut tidak akan diload</p></li>
</ol>


<p>Solusinya mudah, yaitu menghapus cache MAC address di guest Ubuntu, dan merestartnya. Caranya, login ke guest OS, lalu hapus file /etc/udev/rules.d/70-persistent-net.rules. Setelah itu restart.</p>

<pre><code>sudo rm /etc/udev/rules.d/70-persistent-net.rules
sudo reboot
</code></pre>

<p>Setelah restart, guest VM akan kembali memiliki ethernet card.</p>
]]></content>
  </entry>
  
</feed>
